/**
 * WebAuthn utility functions, for handling array buffers.
 *
 * @module     factor_webauthn/utils
 * @copyright  Catalyst IT
 * @author     Alex Morris <alex.morris@catalyst.net.nz>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("factor_webauthn/utils",[],(function(){return{recursiveBase64StrToArrayBuffer:function(obj){if("object"==typeof obj)for(let key in obj)if("string"==typeof obj[key]){let str=obj[key];if("=?BINARY?B?"===str.substring(0,"=?BINARY?B?".length)&&"?="===str.substring(str.length-"?=".length)){str=str.substring("=?BINARY?B?".length,str.length-"?=".length);let binary_string=window.atob(str),len=binary_string.length,bytes=new Uint8Array(len);for(let i=0;i<len;i++)bytes[i]=binary_string.charCodeAt(i);obj[key]=bytes.buffer}}else this.recursiveBase64StrToArrayBuffer(obj[key])},arrayBufferToBase64:function(buffer){let binary="",bytes=new Uint8Array(buffer),len=bytes.byteLength;for(let i=0;i<len;i++)binary+=String.fromCharCode(bytes[i]);return window.btoa(binary)}}}));

//# sourceMappingURL=utils.min.js.map