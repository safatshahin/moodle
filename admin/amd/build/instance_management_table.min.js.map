{"version":3,"file":"instance_management_table.min.js","sources":["../src/instance_management_table.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport PluginManagementTable from 'core_admin/plugin_management_table';\nimport {call as fetchMany} from 'core/ajax';\nimport {refreshTableContent} from 'core_table/dynamic';\nimport Pending from 'core/pending';\nimport {fetchNotifications} from 'core/notification';\nimport DeleteCancelModal from 'core/modal_delete_cancel';\nimport ModalEvents from 'core/modal_events';\n\n/**\n * Handles setting plugin state for the instance management table.\n *\n * @module     core_admin/instance_management_table\n * @copyright  2024 Matt Porritt <matt.porritt@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport default class extends PluginManagementTable {\n    constructor() {\n        super();\n        this.addClickHandler(this.handleDelete);\n    }\n\n    /**\n     * Call the delete service.\n     *\n     * @param {string} methodname The web service to call\n     * @param {number} providerid The provider id.\n     * @return {Promise} The promise.\n     */\n    deleteInstance(methodname, providerid) {\n        return fetchMany([{\n            methodname,\n            args: {\n                providerid,\n            },\n        }])[0];\n    }\n\n    /**\n     * Handle deletion of the instance.\n     *\n     * @param {HTMLElement} tableRoot\n     * @param {Event} e\n     */\n    async handleDelete(tableRoot, e) {\n        const deleteElement = e.target.closest('[data-action=\"deleteinstance\"][data-delete-method]');\n        if (deleteElement) {\n            e.preventDefault();\n            const providerId = e.target.dataset.id;\n            const deleteMethod = e.target.dataset.deleteMethod;\n\n            const modal = await DeleteCancelModal.create({\n                title: e.target.dataset.title,\n                body: e.target.dataset.confirm,\n                show: true,\n                removeOnClose: true,\n            });\n\n            // Handle delete event.\n            modal.getRoot().on(ModalEvents.delete, async(e) => {\n                e.preventDefault();\n                const pendingPromise = new Pending('core_table/dynamic:deleteInstance');\n                await this.deleteInstance(deleteMethod, providerId);\n                // Reload the table, so we get the updated list of providers, and any messages.\n                await Promise.all([\n                    refreshTableContent(tableRoot),\n                    fetchNotifications(),\n                ]);\n                modal.destroy();\n                pendingPromise.resolve();\n            });\n        }\n    }\n}\n"],"names":["PluginManagementTable","constructor","addClickHandler","this","handleDelete","deleteInstance","methodname","providerid","args","tableRoot","e","target","closest","preventDefault","providerId","dataset","id","deleteMethod","modal","DeleteCancelModal","create","title","body","confirm","show","removeOnClose","getRoot","on","ModalEvents","delete","async","pendingPromise","Pending","Promise","all","destroy","resolve"],"mappings":";;;;;;;sVA8B6BA,iCACzBC,2BAESC,gBAAgBC,KAAKC,cAU9BC,eAAeC,WAAYC,mBAChB,cAAU,CAAC,CACdD,WAAAA,WACAE,KAAM,CACFD,WAAAA,eAEJ,sBASWE,UAAWC,MACJA,EAAEC,OAAOC,QAAQ,sDACpB,CACfF,EAAEG,uBACIC,WAAaJ,EAAEC,OAAOI,QAAQC,GAC9BC,aAAeP,EAAEC,OAAOI,QAAQE,aAEhCC,YAAcC,6BAAkBC,OAAO,CACzCC,MAAOX,EAAEC,OAAOI,QAAQM,MACxBC,KAAMZ,EAAEC,OAAOI,QAAQQ,QACvBC,MAAM,EACNC,eAAe,IAInBP,MAAMQ,UAAUC,GAAGC,sBAAYC,QAAQC,MAAAA,IACnCpB,EAAEG,uBACIkB,eAAiB,IAAIC,iBAAQ,2CAC7B7B,KAAKE,eAAeY,aAAcH,kBAElCmB,QAAQC,IAAI,EACd,gCAAoBzB,YACpB,wCAEJS,MAAMiB,UACNJ,eAAeK"}