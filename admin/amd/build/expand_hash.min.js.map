{"version":3,"file":"expand_hash.min.js","sources":["../src/expand_hash.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Expand the collapse section element based on hash URL (e.g. #collapseElement-1)\n *\n * @module      core_admin/expand_hash\n * @copyright   Meirza <meirza.arson@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since       4.5\n */\n\nconst SELECTORS = {\n    COLLAPSE_ELEMENTS: '[data-toggle=\"collapse\"]',\n};\n\n/**\n * Initialises the hash expand collapse.\n */\nexport const init = () => {\n    // Select all collapsible elements only.\n    document.querySelectorAll(SELECTORS.COLLAPSE_ELEMENTS).forEach(element => {\n        element.addEventListener('focus', event => {\n            if (window.location.hash === `#${event.target.id}`) {\n                expandSection(window.location.hash);\n            }\n        }, true);\n    });\n};\n\n/**\n * Expands the section based on the current URL hash.\n *\n * This function checks if there is a hash in the current URL. If there is,\n * it selects the corresponding element and triggers a click event on it\n * to expand the section.\n *\n * @param {string} hash - The hash (e.g. `#collapseElement-1`) of the element to expand.\n */\nexport const expandSection = (hash) => {\n    const targetContainer = document.querySelector(hash);\n    if (\n        targetContainer?.getAttribute('data-toggle') === 'collapse' &&\n        targetContainer?.getAttribute('aria-expanded') === 'false'\n    ) {\n        const collapseId = targetContainer.getAttribute('aria-controls');\n        const collapseContainer = document.getElementById(collapseId);\n\n        // Remove 'collapse' class and add 'show' class to show the content.\n        collapseContainer.classList.remove('collapse');\n        collapseContainer.classList.add('show');\n\n        // Update aria-expanded attribute to reflect the new state.\n        targetContainer.setAttribute('aria-expanded', 'true');\n    }\n};\n"],"names":["SELECTORS","document","querySelectorAll","forEach","element","addEventListener","event","window","location","hash","target","id","expandSection","targetContainer","querySelector","getAttribute","collapseId","collapseContainer","getElementById","classList","remove","add","setAttribute"],"mappings":";;;;;;;;;MAwBMA,4BACiB,yCAMH,KAEhBC,SAASC,iBAAiBF,6BAA6BG,SAAQC,UAC3DA,QAAQC,iBAAiB,SAASC,QAC1BC,OAAOC,SAASC,kBAAaH,MAAMI,OAAOC,KAC1CC,cAAcL,OAAOC,SAASC,SAEnC,aAaEG,cAAiBH,aACpBI,gBAAkBZ,SAASa,cAAcL,SAEM,cAAjDI,MAAAA,uBAAAA,gBAAiBE,aAAa,iBACqB,WAAnDF,MAAAA,uBAAAA,gBAAiBE,aAAa,kBAChC,OACQC,WAAaH,gBAAgBE,aAAa,iBAC1CE,kBAAoBhB,SAASiB,eAAeF,YAGlDC,kBAAkBE,UAAUC,OAAO,YACnCH,kBAAkBE,UAAUE,IAAI,QAGhCR,gBAAgBS,aAAa,gBAAiB"}